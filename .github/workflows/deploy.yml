name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
      SSH_KEY_PATH: ${{ github.workspace }}/../private.key
      DOCKER_TAG: railmap
      SERVER_IP: ${{ secrets.SERVER_HOST }}
      SERVER_USERNAME: ${{ secrets.SERVER_USER }}
      POSTGRES_DB: railmap
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create frontend .env file
        run: |
          cat > frontend/.env << EOF
          DB_USER=$DB_USER
          DB_PASSWORD=$DB_PASSWORD
          JWT_SECRET=$JWT_SECRET
          EOF
        
      - name: Build the frontend Docker image
        run: docker build frontend --file frontend/Dockerfile --no-cache --tag $DOCKER_TAG
        
      - name: Create SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ../private.key
          sudo chmod 600 ../private.key
          ssh-keyscan -H $SERVER_IP >> ~/.ssh/known_hosts
        shell: bash
        
      - name: Save, compress and push the Docker image
        run: docker save $DOCKER_TAG | gzip | ssh -i $SSH_KEY_PATH $SERVER_USERNAME@$SERVER_IP docker load
        
      - name: Upload docker-compose
        run: scp -i $SSH_KEY_PATH docker-compose.yml $SERVER_USERNAME@$SERVER_IP:/home/$SERVER_USERNAME/$DOCKER_TAG.yml
        
      - name: Reload container
        run: |
          ssh -i $SSH_KEY_PATH $SERVER_USERNAME@$SERVER_IP "
            export DB_USER='$DB_USER'
            export DB_PASSWORD='$DB_PASSWORD'
            export POSTGRES_DB='$POSTGRES_DB'
            export JWT_SECRET='$JWT_SECRET'
            docker compose -f $DOCKER_TAG.yml up -d && docker image prune --force
          "